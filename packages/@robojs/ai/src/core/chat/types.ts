/** Type definitions used by the chat subsystem when interacting with Discord. */
import type { GuildMember, InteractionReplyOptions, TextBasedChannel, User } from 'discord.js'
import type { ChatOptions as BaseChatOptions } from '@/engines/base.js'

/** Represents a reply generated by the chat engine, including optional Discord payloads. */
export interface ChatReply {
	/** Discord UI components (buttons, selects, etc.). */
	components?: InteractionReplyOptions['components']
	/** Embed payloads returned with the reply. */
	embeds?: InteractionReplyOptions['embeds']
	/** File attachments included with the reply. */
	files?: InteractionReplyOptions['files']
	/** Plain text content for the reply. */
	text?: string
}

/**
 * Options passed to the chat engine, extending base engine configuration with Discord context and
 * reply callback.
 */
export interface ChatOptions extends Omit<BaseChatOptions, 'threadId' | 'userId'> {
	/** Discord channel associated with the conversation. */
	channel?: TextBasedChannel | null
	/** Guild member context when available. */
	member?: GuildMember | null
	/** Discord user context when the member is unavailable. */
	user?: User | null
	/** Callback invoked whenever the engine produces a reply. */
	onReply: (reply: ChatReply) => void | Promise<void>
}
